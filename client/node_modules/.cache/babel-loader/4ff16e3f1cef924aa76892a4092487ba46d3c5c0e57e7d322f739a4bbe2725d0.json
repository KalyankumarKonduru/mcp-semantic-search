{"ast":null,"code":"var _jsxFileName = \"/Users/kalyankumarkonduru/Desktop/mcp-semantic-search/client/src/components/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Input, Button, Flex, FormControl, FormLabel, Switch, useToast, IconButton } from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch,\n  isLoading\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [isHybridSearch, setIsHybridSearch] = useState(false);\n  const [keywords, setKeywords] = useState('');\n  const toast = useToast();\n  const handleSearch = e => {\n    e.preventDefault();\n    if (!query && (!isHybridSearch || !keywords)) {\n      toast({\n        title: 'Search query required',\n        description: 'Please enter a search query',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    onSearch({\n      query,\n      keywords: isHybridSearch ? keywords : null,\n      isHybrid: isHybridSearch\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    as: \"form\",\n    onSubmit: handleSearch,\n    width: \"full\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: \"column\",\n      gap: 3,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"hybrid-search\",\n          mb: \"0\",\n          fontSize: \"sm\",\n          children: \"Enable hybrid search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          id: \"hybrid-search\",\n          colorScheme: \"blue\",\n          isChecked: isHybridSearch,\n          onChange: e => setIsHybridSearch(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        gap: 2,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Enter semantic search query...\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          size: \"lg\",\n          borderRadius: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          type: \"submit\",\n          \"aria-label\": \"Search\",\n          icon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 19\n          }, this),\n          size: \"lg\",\n          colorScheme: \"blue\",\n          isLoading: isLoading,\n          borderRadius: \"md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), isHybridSearch && /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Additional keywords (optional)...\",\n        value: keywords,\n        onChange: e => setKeywords(e.target.value),\n        size: \"md\",\n        mt: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"YEzhLxMuznLop2RgmooF9gn4oGo=\", false, function () {\n  return [useToast];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","Box","Input","Button","Flex","FormControl","FormLabel","Switch","useToast","IconButton","SearchIcon","jsxDEV","_jsxDEV","SearchBar","onSearch","isLoading","_s","query","setQuery","isHybridSearch","setIsHybridSearch","keywords","setKeywords","toast","handleSearch","e","preventDefault","title","description","status","duration","isClosable","isHybrid","as","onSubmit","width","children","direction","gap","display","alignItems","justifyContent","htmlFor","mb","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","id","colorScheme","isChecked","onChange","target","checked","placeholder","value","size","borderRadius","type","icon","mt","_c","$RefreshReg$"],"sources":["/Users/kalyankumarkonduru/Desktop/mcp-semantic-search/client/src/components/SearchBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Box, \n  Input, \n  Button, \n  Flex, \n  FormControl,\n  FormLabel,\n  Switch,\n  useToast,\n  IconButton\n} from '@chakra-ui/react';\nimport { SearchIcon } from '@chakra-ui/icons';\n\nconst SearchBar = ({ onSearch, isLoading }) => {\n  const [query, setQuery] = useState('');\n  const [isHybridSearch, setIsHybridSearch] = useState(false);\n  const [keywords, setKeywords] = useState('');\n  const toast = useToast();\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    \n    if (!query && (!isHybridSearch || !keywords)) {\n      toast({\n        title: 'Search query required',\n        description: 'Please enter a search query',\n        status: 'warning',\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    \n    onSearch({\n      query,\n      keywords: isHybridSearch ? keywords : null,\n      isHybrid: isHybridSearch\n    });\n  };\n\n  return (\n    <Box as=\"form\" onSubmit={handleSearch} width=\"full\">\n      <Flex direction=\"column\" gap={3}>\n        <FormControl display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\">\n          <FormLabel htmlFor=\"hybrid-search\" mb=\"0\" fontSize=\"sm\">\n            Enable hybrid search\n          </FormLabel>\n          <Switch \n            id=\"hybrid-search\" \n            colorScheme=\"blue\"\n            isChecked={isHybridSearch}\n            onChange={(e) => setIsHybridSearch(e.target.checked)}\n          />\n        </FormControl>\n        \n        <Flex gap={2}>\n          <Input\n            placeholder=\"Enter semantic search query...\"\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            size=\"lg\"\n            borderRadius=\"md\"\n          />\n          \n          <IconButton\n            type=\"submit\"\n            aria-label=\"Search\"\n            icon={<SearchIcon />}\n            size=\"lg\"\n            colorScheme=\"blue\"\n            isLoading={isLoading}\n            borderRadius=\"md\"\n          />\n        </Flex>\n        \n        {isHybridSearch && (\n          <Input\n            placeholder=\"Additional keywords (optional)...\"\n            value={keywords}\n            onChange={(e) => setKeywords(e.target.value)}\n            size=\"md\"\n            mt={2}\n          />\n        )}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default SearchBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}